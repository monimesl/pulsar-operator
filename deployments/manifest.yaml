# create the namespace
---
apiVersion: v1
kind: Namespace
metadata:
   name: pulsar-operator
---
# Source: pulsar-operator/templates/service_account.yaml
# @formatter:off
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: pulsar-operator-0.2.1
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
  name: pulsar-operator
---
# Source: pulsar-operator/templates/webhookSecretAndConfigurations.yaml
# @formatter:off
  ## We generate one root CA and server certificate which are as
  ## by the webhook caBundle and server secrete. We place the both
  ## secret and webhook config files here so they share the same root CA
  ## See https://github.com/helm/helm/issues/6456#issuecomment-701727623---
kind: Secret
apiVersion: v1
type: kubernetes.io/tls
metadata:
  name: pulsar-operator-pulsar-operator-webhook-secret
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.2.1
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVCekNDQXUrZ0F3SUJBZ0lSQU9pQmh5K1lDWnlTMUJQVG5xSFcrQmN3RFFZSktvWklodmNOQVFFTEJRQXcKR1RFWE1CVUdBMVVFQXhNT2QyVmliMjlyTFhKdmIzUXRZMkV3SGhjTk1qVXdNVEF5TURNeU1qQTVXaGNOTXpReApNak14TURNeU1qQTVXakE2TVRnd05nWURWUVFERXk5d2RXeHpZWEl0YjNCbGNtRjBiM0l0Y0hWc2MyRnlMVzl3ClpYSmhkRzl5TFhkbFltaHZiMnN0YzJWeWRtbGpaVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBS2Fyd0ZTYzJ0Sy9td3ZaOHFjelFxR2ZkUWxwMERJdEZKdXN1TkxMS1ROTkpWcjNjWkdOUTR4awo4aUxYUGtUcjNvbGhTZzh6bGdsU1paNitHVEZQTENJWWoxa3Myb0hvNElYTmFVQlgxL0tJQk4yenhSY1hWVjJkCmQxN1ByTHc0SVVLQnFuTS9Yb2hxUDEwVWhmdTloWTFpejdMK21ERGwvdG5OaytHL3FVSkI3WjAvN3JWTkhzTlEKL2FTeGtTRUlVWlNSemdRcm9YZm82TDRGNjNSbmhFdlIvaitPK0ppaWVzUFJacW1rT1BxY1ZwTkFCTDBMVzFRTwpuM3NPSlBWWG9RSEZVZUVDTDRPNGZvUEtzb1orRlBjTk9XNGlIYVFyNVVEVEtRejUwMG84cWdpWU9JUEJPR0VqCkVUaUMyZWNsVUFFYTNZN0k1aWhiNzd2TFRhajc4OGtDQXdFQUFhT0NBU2N3Z2dFak1BNEdBMVVkRHdFQi93UUUKQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJdwpBREFmQmdOVkhTTUVHREFXZ0JSK3o3Wm9lb0Y2enFBbnBrM0F6SjhhL3RBd05EQ0J3Z1lEVlIwUkJJRzZNSUczCmdpOXdkV3h6WVhJdGIzQmxjbUYwYjNJdGNIVnNjMkZ5TFc5d1pYSmhkRzl5TFhkbFltaHZiMnN0YzJWeWRtbGoKWllJL2NIVnNjMkZ5TFc5d1pYSmhkRzl5TFhCMWJITmhjaTF2Y0dWeVlYUnZjaTEzWldKb2IyOXJMWE5sY25acApZMlV1Y0hWc2MyRnlMVzl3WlhKaGRHOXlna053ZFd4ellYSXRiM0JsY21GMGIzSXRjSFZzYzJGeUxXOXdaWEpoCmRHOXlMWGRsWW1odmIyc3RjMlZ5ZG1salpTNXdkV3h6WVhJdGIzQmxjbUYwYjNJdWMzWmpNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCOXVSRnNranBYSmNlQ2x6VVlSSVJkVU1QdmttN2U2QlczS0k1UGJMaVQ0elM5QW1pTgpLc0dYWFpaelB6YlVFa0NxMGE0TnZ4bUp3dW5ZVXpsL3FGSkNFUkI5YkZKd2ZOR3p6NFQ1YkNjdmk2ZW5uNDJ3CkVJNEhhNGR5S0FDOVlIZGpzUXcyWUMrQlhBblNrNUFUWGVCVU9WdUtIV20zTjM0SzJzQW9DYm1OZXFhNkVCVGMKTlBxTHk4WWtSSzdEdWhSWVJneHpZOEZxbTNTaWYxOW5FSytDY0hqOERTMXI0Yjh4TVJIbkYxK0dVbkxvcTJvMQpmZGhsVEhLV0UrZXd0WVNLZWx1aTZ1eklBTU9wdEhVUVZmRFJLZy9KYnFDeXozZnlBNDVsWDVyaTNQU2VpRDhGCkxqNlBlNE9LenJtcmxmN2w3UXUzWmxMQUVXWHVITzMyMldldQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcHF2QVZKemEwcitiQzlueXB6TkNvWjkxQ1duUU1pMFVtNnk0MHNzcE0wMGxXdmR4CmtZMURqR1R5SXRjK1JPdmVpV0ZLRHpPV0NWSmxucjRaTVU4c0loaVBXU3phZ2VqZ2hjMXBRRmZYOG9nRTNiUEYKRnhkVlhaMTNYcytzdkRnaFFvR3FjejllaUdvL1hSU0YrNzJGaldMUHN2NllNT1grMmMyVDRiK3BRa0h0blQvdQp0VTBldzFEOXBMR1JJUWhSbEpIT0JDdWhkK2pvdmdYcmRHZUVTOUgrUDQ3NG1LSjZ3OUZtcWFRNCtweFdrMEFFCnZRdGJWQTZmZXc0azlWZWhBY1ZSNFFJdmc3aCtnOHF5aG40VTl3MDViaUlkcEN2bFFOTXBEUG5UU2p5cUNKZzQKZzhFNFlTTVJPSUxaNXlWUUFScmRqc2ptS0Z2dnU4dE5xUHZ6eVFJREFRQUJBb0lCQUVMOVEwZCs2QURPM0YyTwpFeGFhNXN3WlVDd2hhSG5TWHJjWFhBMzFkRERYY0EwNDZWK3NISnRBTTRaSFp4TENqdVkrd1VxTTNHQVF5eUZiCm5McVI3TllqY3ZKUHNkK0hIejhJU2FaLzZCN21CcmFwTzYxRlJwMWkzZ2l3aGVmODAzbHNybnExM0tRTnVEd00KTkxIekFjdkxERm9RTkZGckQ5eXc0U0JhTFlpZ1dyVzFaSzl6MGRiODVkM1NPSFpORHloU3pNSkNORmZwSXJrUwpITGNsME84bHpHUThIS2gvRThDREI4SjgzL1NPQmFLUTByTThLQVoxVTNGZDNsV1hQbXQ5R3NQNEFpTm1MTHBuCkMwZmJqVXB6ZjNTa2VETjFPL1VlT3BsZnBnWTk4UUZEWVNPRTM5SEluTzVjZFM5TWVFdllsUHJRNDBTQU8zZUsKUEJITEsxRUNnWUVBd3pRdnQvbXdFZUNOZ1o0MHdGWVhaOXYvTW05MG55QkZxMFJpOXozaUVqaG9rNldoRU8vdgpDa2c0aTBzd2NZa1F4cTFaT2dybFNZQXZyU2VYL1J0SWZNSVowVlY3T005VkkrTDNrSjdxKzFtLzRDamxpU3h1CmtPdjF3NWpuOUhjUEMwYzE5NFdwNHZHOUR2SjZKY0pUQ0EwSElqRllFN0JaK0JDRlcvOTBEbDBDZ1lFQTJwU2EKSUwyd09QUERuemd0cWZFcldOUy9ZWVZabU5OTnByVUU4eGZCcHUrbVRIdVZLaU45UzAyWFI2UE1kVE1td2d6dApaZDBxUHdONE9KTmcydThCekRncjloZUVkSW5NT2ljSVJ2MzMxVFJmR3d6UGh5N1lYTjd0UFpKZXlqdHBWczVUClN2djk1WW1ZaWdQSEpWUit0RXRYcGRXUW8rd1ZOZlZWSU4yWjdGMENnWUVBa3ovaG96bHh6UHFFSkR2UWRTbzgKTzdkam1Zc2tBUWxhSktqUXNzcjJwMkh2MlRpKytFVFdILzU4ME82bUcyOFd2WmgwVDJsNnJ1aElqcWpvYVNEVQpuRy9iQStNa3NhVU5CNllscysxOU9wL29NdE1HMjJRdC81cFBhUDRHTTQ1QVJmU3d6QWdETUZQRWx1cm9vMlVrCk4xV0VoUkdON0VSQ2lmTUVkbktML0cwQ2dZQVRHNFJ4c2tOU1p6VEZtV0tjaFlHVmpWdUJpZWV3TFdDUFh5bWsKbW9JS05zN2h4cmZlYkNYS3pHaWFFWjZRN0R6S0g5a3MyMjJTL3BtbTBITmFFQ1NuRm8zNVFFc0s2UFRhYklrVApzNlhUbEhWdjV1bkpWbllCZ0ZkYTE0M0R2ZmZTWjh6dU5DTVl5ck56OVNxV2Y5Rm5yMkpsRTh0R0dTQXRqRm01CnVzVjIzUUtCZ0cwM2MxemZwT3lubHp3MXBaNmpEb3Q4eVlQUjNPZVV5NlNFQVQ0a0Iyb0V1RnBJNFlPNVdzK2kKMTFHNUk2b1hqVjVwdGNMeEpXVy8xWmhENzF4a3dkdzVxWkhPM2orNXFuUWhLMEk0UU8xY1ZOV3c2UmZzRWZTagpuZEc4WTRDOXJqS1phTmZYbE4xZjlnOTh4R0phS2FOeTQxbGx5N1owYjNDSHZ2QjV4Q0ttCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: pulsar-operator/templates/clusterrole.yaml
# @formatter:off
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pulsar-operator-manager-role
  labels:
    helm.sh/chart: pulsar-operator-0.2.1
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - pulsar.monime.sl
    resources:
      - pulsarclusters
      - pulsarmanagers
      - pulsarproxies
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - pulsar.monime.sl
    resources:
      - pulsarclusters/status
      - pulsarmanagers/status
      - pulsarproxies/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
      - apps
      - batch
      - policy
      - extensions
    resources:
      - jobs
      - pods
      - events
      - secrets
      - services
      - configmaps
      - statefulsets
      - poddisruptionbudgets
      - persistentvolumeclaims
    verbs:
      - '*'
---
# Source: pulsar-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pulsar-operator-proxy-role
rules:
  - apiGroups: [ "authentication.k8s.io" ]
    resources:
      - tokenreviews
    verbs: [ "create" ]
  - apiGroups: [ "authorization.k8s.io" ]
    resources:
      - subjectaccessreviews
    verbs: [ "create" ]
---
# Source: pulsar-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pulsar-operator-metrics-reader
rules:
  - nonResourceURLs: [ "/metrics" ]
    verbs: [ "get" ]
---
# Source: pulsar-operator/templates/clusterrolebinding.yaml
# @formatter:off
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pulsar-operator-manager-role-binding
  labels:
    helm.sh/chart: pulsar-operator-0.2.1
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pulsar-operator-manager-role
subjects:
  - kind: ServiceAccount
    namespace: pulsar-operator
    name: pulsar-operator
---
# Source: pulsar-operator/templates/role.yaml
# @formatter:off
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pulsar-operator-leader-election-role
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.2.1
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: pulsar-operator/templates/rolebinding.yaml
# @formatter:off
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pulsar-operator-leader-election-role-binding
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.2.1
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pulsar-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    namespace: pulsar-operator
    name: pulsar-operator
---
# Source: pulsar-operator/templates/services.yaml
# @formatter:off
apiVersion: v1
kind: Service
metadata:
  name: pulsar-operator-pulsar-operator-webhook-service
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.2.1
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 443
      targetPort: 9443
  selector:
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
---
# Source: pulsar-operator/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: pulsar-operator-controller-manager-metrics-service
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.2.1
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: http
      port: 8080
      targetPort: http
  
  selector:
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
---
# Source: pulsar-operator/templates/deployment.yaml
# @formatter:off
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pulsar-operator
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.2.1
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pulsar-operator
      app.kubernetes.io/instance: pulsar-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pulsar-operator
        app.kubernetes.io/instance: pulsar-operator
    spec:
      containers:
        - name: pulsar-operator
          image: monime/pulsar-operator:v0.2.1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: webhook-certs
              mountPath: /tmp/k8s-webhook-server/serving-certs
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsUser: 65534
          env:
            - name: LEADER_ELECTION_NAMESPACE
              value: pulsar-operator
      volumes:
        - name: webhook-certs
          secret:
            secretName: pulsar-operator-pulsar-operator-webhook-secret
      serviceAccountName: pulsar-operator
