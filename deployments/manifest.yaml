# create the namespace
---
apiVersion: v1
kind: Namespace
metadata:
   name: pulsar-operator
---
# Source: pulsar-operator/templates/service_account.yaml
# @formatter:off
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: pulsar-operator-0.2.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
  name: pulsar-operator
---
# Source: pulsar-operator/templates/webhookSecretAndConfigurations.yaml
# @formatter:off
  ## We generate one root CA and server certificate which are as
  ## by the webhook caBundle and server secrete. We place the both
  ## secret and webhook config files here so they share the same root CA
  ## See https://github.com/helm/helm/issues/6456#issuecomment-701727623---
kind: Secret
apiVersion: v1
type: kubernetes.io/tls
metadata:
  name: pulsar-operator-pulsar-operator-webhook-secret
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.2.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVCakNDQXU2Z0F3SUJBZ0lRSnZsckJFVTJPZUh3S1Vpc2IyaVk4REFOQmdrcWhraUc5dzBCQVFzRkFEQVoKTVJjd0ZRWURWUVFERXc1M1pXSnZiMnN0Y205dmRDMWpZVEFlRncweU16RXhNVFF4TVRFNE1EbGFGdzB6TXpFeApNVEV4TVRFNE1EbGFNRG94T0RBMkJnTlZCQU1UTDNCMWJITmhjaTF2Y0dWeVlYUnZjaTF3ZFd4ellYSXRiM0JsCmNtRjBiM0l0ZDJWaWFHOXZheTF6WlhKMmFXTmxNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUIKQ2dLQ0FRRUF1VlkrZWk0VC83M2xvV2NMWk1IU3JWM2NTcDhWOEJsKzVLZklTczBFZlRwYnJlM0Q0YlQ4YWhqZQpQNm1sQWVhRElGUlBzQ0JlU0xMdnI4OTZVZWNOZlQybWtmNkdLdExrMVlGRWl6ZEY0dWx3M2tyeElKU2lnVDl5CjdrclZJaUU0d2JOSng0SVkxdm4yZHNQMDZYd1FGdVY2bTBNT2tFMlJCZGtxbWxRWk5IaWpqT1REMnJBMDN4NzkKejZjQXdRUWNXM2RUR0hvaUx6UFc5ajZiRElZQ3lqM2FHWTd6SDI4Z0FyNE9MN2ppZ0lxWEV2Y3hsdmRTNitqawpzQWxFUWtZRW5nSTVnZ1R5VEFTaGw3aDIwbk1idWN5MHRNOXJCODAvdm5MRkQ3Q2RmNC9tVldwNmFGK0M5WEZMCno3YVQ4ZCtSckkxalMyMEo2aHFWNG9xVHRrQXl3UUlEQVFBQm80SUJKekNDQVNNd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjhHQTFVZEl3UVlNQmFBRkFWVWFod0dCQmV5QkVOYUZtQ0RYQm9admxEd01JSENCZ05WSFJFRWdib3dnYmVDCkwzQjFiSE5oY2kxdmNHVnlZWFJ2Y2kxd2RXeHpZWEl0YjNCbGNtRjBiM0l0ZDJWaWFHOXZheTF6WlhKMmFXTmwKZ2o5d2RXeHpZWEl0YjNCbGNtRjBiM0l0Y0hWc2MyRnlMVzl3WlhKaGRHOXlMWGRsWW1odmIyc3RjMlZ5ZG1sagpaUzV3ZFd4ellYSXRiM0JsY21GMGIzS0NRM0IxYkhOaGNpMXZjR1Z5WVhSdmNpMXdkV3h6WVhJdGIzQmxjbUYwCmIzSXRkMlZpYUc5dmF5MXpaWEoyYVdObExuQjFiSE5oY2kxdmNHVnlZWFJ2Y2k1emRtTXdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUJKQkZUbVFUM3ZyUnlibmFjR0lvVHFuNnl5UUZob2c5VXdCa3NZTU5pOXZOMy9YekxxMQpTYXNpdm0xUTUyQ0FJRkMyVkhoQWNZUGFXV21Rd1M5Sm44ME10c3ExdTg3TTZVMzhZMWhUWlJvWDZrdjBkT1pQCkhVeVVJbFhDN2crZ3licVhWRzBOaEYrd0ZOY2MrZ2ZvanpibElGeVpzcUFSclF6MHovOVQvb0lsSXRCTVJleXoKWmVhMFlVVkpGZGI4QWFTQWEzbEx4eE51WmNFQlBYNGFFUVpMWHFzdnlCNGFOMlh0SlR4eWRyTU5ZZ0ZGU3FJYwp3OTFVSXlOQ0VNaGloeXF6VWJNbitOdmMya0pJT3Q1NTBhelRxamZaWm8wYXZQakdEVTFHbnpIdEhIVjBobXl2CnhDcG1GMFhkSWdNZFRZb0xUZ0FoUXVJZWtMS1krRUczenk4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdVZZK2VpNFQvNzNsb1djTFpNSFNyVjNjU3A4VjhCbCs1S2ZJU3MwRWZUcGJyZTNECjRiVDhhaGplUDZtbEFlYURJRlJQc0NCZVNMTHZyODk2VWVjTmZUMm1rZjZHS3RMazFZRkVpemRGNHVsdzNrcngKSUpTaWdUOXk3a3JWSWlFNHdiTkp4NElZMXZuMmRzUDA2WHdRRnVWNm0wTU9rRTJSQmRrcW1sUVpOSGlqak9URAoyckEwM3g3OXo2Y0F3UVFjVzNkVEdIb2lMelBXOWo2YkRJWUN5ajNhR1k3ekgyOGdBcjRPTDdqaWdJcVhFdmN4Cmx2ZFM2K2prc0FsRVFrWUVuZ0k1Z2dUeVRBU2hsN2gyMG5NYnVjeTB0TTlyQjgwL3ZuTEZEN0NkZjQvbVZXcDYKYUYrQzlYRkx6N2FUOGQrUnJJMWpTMjBKNmhxVjRvcVR0a0F5d1FJREFRQUJBb0lCQVFDcUFPMHdQNklDblZyTQpjV3ZuRVU5QnpXM3JXUC9UakY5ME9GOG1GZWIvUTQraS9BMEl0VzR2bC80TllYeEZRUCtZb1IyempnMU9IQ3gyCkZSZTdsdmd0b0daeFZvb1ZML3ZOeUZScWF0b0ZLV0pwMVU1WE4xL1V0TEdrMlNtbHM5bU8rL2s2TXlDNzJPOTEKdzR1Y3ZEczU5V2RBa2dNQzVOT1pETG5pZEMvbWl3Nll3R09ac3Z4Ry9Wb2JqT01ubFpybWNEbFN2T1o0Y2IrNQp2L2dLYXlMWFlxcmllRUhKOGpXa09SODRKSWx3OWZFTis3RzZVREVuNjNuUmRVcEMwbUFvMmc4Uk9NOUx1QWxTCkMvNmhvbmhIaHlpNnpwNWloVVVoT1VoeWZhWVpuRHJwTUVXQmpUUWJ4STk2VFd6N0lDQ08vYW1meU41UkY3Y1oKZ1VjKzJWcU5Bb0dCQU9CM3dTQkxucndLOVIxT3pnSUlUdllQM0JvdVRpRzc2eFZNVlBEM0RSc0VBQS85TUswOQpnYVBkVkp5eDR5aDlNRHNnWlBzcHRnR1NwTjE4eFdoYmllRmY0UXAraEpUWXRYMjVRckpSTDRVWWtXaHBpanY1CldFM1pHR0pPRGl2UkROOUZFeXFxaTYwNTNaeWNpYkltVUd3aXJISSszUjRCNW9Nd3N2SnZiYVZYQW9HQkFOTmYKUm94eWxLTm1zUmpLNm5PdDZMam5Gb3VkZERkeWkrcXBtRHZ4ekV4dU1MdFZUY21HV2xFcHlEa1ZEMFlIMWVYNApZcFFGS1IxY1F0TDNPVlZLSE9oeTVWU3BjNXpsU0VlTTlyUW1URFFtNHg3T0NOL0NIYmNXanU3UG9LbFg3MTJ4Clc4MGZCQ3kwUzlla3ZMM1ozTzhQSFJMRk1BUHFxaWtaQmpYb0RBR25Bb0dCQU53M29OazJWenpVNHpVbG95YUwKVUN4SDB3QThmWnJLNmcrekc0SnNYZ2NySFlTU09iYzhxSHRESVVlNW5jcVRSMFk2dWRkUFRLaXVYZUNPRUg0WgprR1B6MUt5ZkF5T2ttQ29JSDA4aUp5VEV2YU5hSjZ3L0xFcnp1ZUI0QTU4cE1SKzZmTnRYQmtHa2k2NmlSTlRxCmtld0UrSG45QXFIMTYxaTU1bFhDekNkeEFvR0JBSmZxUEF3cE5jY1N3V211UFQ4UzJOWTcwQ3BiNmZFSDlLT2QKYkhwNDJIcCtINndrTFJvUDQ4MjlsOWZlMlBGZUpFOTZhMjh6SGsrcHhhVldaZkIwcWI0dkJjQUpZYng3MWEwSApGVEI0N2YvMWl2clMzZkhqMC9PSTFRV3lXQ2dkdVQyL2dOazExNHhCc05pMTM2a2JjZnluQWlCQmRMYjc2M3hLCkxmcUVZa3kxQW9HQU5ZZ1Z4S0loTmxmVGFidE9kUFQ4Z2tQNkhQNjFpVktYeTFUK3lscjJSTThsK1packx6UTgKUnhWc0lDZ0VaZHNma0t6NG1NS3llOXdTSjExMUVJSGpNSThuaTE0a2VjL0wwTE5HcHNnbnBEUEs3R2ZoV2N0VAo2RnQrVGNzVVh1dGw2eG9obUhDcnNUckRoMTUzZGdiaUVBK05rd25XWTNEb3Q2T3FhejRvRFRZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: pulsar-operator/templates/clusterrole.yaml
# @formatter:off
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pulsar-operator-manager-role
  labels:
    helm.sh/chart: pulsar-operator-0.2.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - pulsar.monime.sl
    resources:
      - pulsarclusters
      - pulsarmanagers
      - pulsarproxies
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - pulsar.monime.sl
    resources:
      - pulsarclusters/status
      - pulsarmanagers/status
      - pulsarproxies/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
      - apps
      - batch
      - policy
      - extensions
    resources:
      - jobs
      - pods
      - events
      - secrets
      - services
      - configmaps
      - statefulsets
      - poddisruptionbudgets
      - persistentvolumeclaims
    verbs:
      - '*'
---
# Source: pulsar-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pulsar-operator-proxy-role
rules:
  - apiGroups: [ "authentication.k8s.io" ]
    resources:
      - tokenreviews
    verbs: [ "create" ]
  - apiGroups: [ "authorization.k8s.io" ]
    resources:
      - subjectaccessreviews
    verbs: [ "create" ]
---
# Source: pulsar-operator/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pulsar-operator-metrics-reader
rules:
  - nonResourceURLs: [ "/metrics" ]
    verbs: [ "get" ]
---
# Source: pulsar-operator/templates/clusterrolebinding.yaml
# @formatter:off
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pulsar-operator-manager-role-binding
  labels:
    helm.sh/chart: pulsar-operator-0.2.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pulsar-operator-manager-role
subjects:
  - kind: ServiceAccount
    namespace: pulsar-operator
    name: pulsar-operator
---
# Source: pulsar-operator/templates/role.yaml
# @formatter:off
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pulsar-operator-leader-election-role
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.2.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: pulsar-operator/templates/rolebinding.yaml
# @formatter:off
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pulsar-operator-leader-election-role-binding
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.2.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pulsar-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    namespace: pulsar-operator
    name: pulsar-operator
---
# Source: pulsar-operator/templates/services.yaml
# @formatter:off
apiVersion: v1
kind: Service
metadata:
  name: pulsar-operator-pulsar-operator-webhook-service
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.2.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - port: 443
      targetPort: 9443
  selector:
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
---
# Source: pulsar-operator/templates/services.yaml
apiVersion: v1
kind: Service
metadata:
  name: pulsar-operator-controller-manager-metrics-service
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.2.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: http
      port: 8080
      targetPort: http
  
  selector:
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
---
# Source: pulsar-operator/templates/deployment.yaml
# @formatter:off
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pulsar-operator
  namespace: pulsar-operator
  labels:
    helm.sh/chart: pulsar-operator-0.2.0
    app.kubernetes.io/name: pulsar-operator
    app.kubernetes.io/instance: pulsar-operator
    app.kubernetes.io/version: "0.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: pulsar-operator
      app.kubernetes.io/instance: pulsar-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pulsar-operator
        app.kubernetes.io/instance: pulsar-operator
    spec:
      containers:
        - name: pulsar-operator
          image: monime/pulsar-operator:v0.2.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: webhook-certs
              mountPath: /tmp/k8s-webhook-server/serving-certs
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 65534
            runAsUser: 65534
          env:
            - name: LEADER_ELECTION_NAMESPACE
              value: pulsar-operator
      volumes:
        - name: webhook-certs
          secret:
            secretName: pulsar-operator-pulsar-operator-webhook-secret
      serviceAccountName: pulsar-operator
